{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Soundify/src/app/api/spotify/track/route.ts"],"sourcesContent":["import { NextResponse, type NextRequest } from \"next/server\";\n\n/**\n * Interface for Spotify Track details\n */\ninterface SpotifyTrack {\n\tid: string;\n\tname: string;\n\turi: string;\n\talbum: {\n\t\tid: string;\n\t\tname: string;\n\t\timages: Array<{\n\t\t\turl: string;\n\t\t\theight: number;\n\t\t\twidth: number;\n\t\t}>;\n\t\trelease_date: string;\n\t\tavailable_markets: string[];\n\t};\n\tartists: Array<{\n\t\tid: string;\n\t\tname: string;\n\t\turi: string;\n\t}>;\n\tduration_ms: number;\n\tpopularity: number;\n\texternal_ids: {\n\t\tisrc?: string;\n\t\tean?: string;\n\t\tupc?: string;\n\t};\n\texplicit: boolean;\n}\n\n/**\n * Get track details by ID or ISRC\n */\nexport async function GET(request: NextRequest) {\n\ttry {\n\t\tconst { searchParams } = new URL(request.url);\n\t\tconst id = searchParams.get(\"id\");\n\t\tconst isrc = searchParams.get(\"isrc\");\n\n\t\tif (!id && !isrc) {\n\t\t\treturn NextResponse.json(\n\t\t\t\t{ error: \"Either 'id' or 'isrc' parameter is required\" },\n\t\t\t\t{ status: 400 },\n\t\t\t);\n\t\t}\n\n\t\t// Get Spotify token\n\t\tconst tokenResponse = await fetch(\n\t\t\t`${new URL(request.url).origin}/api/spotify/token`,\n\t\t);\n\n\t\tif (!tokenResponse.ok) {\n\t\t\tconst errorText = await tokenResponse.text();\n\t\t\tconsole.error(\"Failed to fetch Spotify token:\", errorText);\n\t\t\treturn NextResponse.json(\n\t\t\t\t{ error: \"Failed to authenticate with Spotify\" },\n\t\t\t\t{ status: tokenResponse.status },\n\t\t\t);\n\t\t}\n\n\t\tconst tokenData = await tokenResponse.json();\n\n\t\t// If ISRC is provided, search by ISRC first\n\t\tif (isrc) {\n\t\t\tconsole.log(`Finding track by ISRC: ${isrc}`);\n\n\t\t\tconst searchUrl = new URL(\"https://api.spotify.com/v1/search\");\n\t\t\tsearchUrl.searchParams.append(\"q\", `isrc:${isrc}`);\n\t\t\tsearchUrl.searchParams.append(\"type\", \"track\");\n\t\t\tsearchUrl.searchParams.append(\"limit\", \"1\");\n\t\t\tsearchUrl.searchParams.append(\"market\", \"US\");\n\n\t\t\tconst searchResponse = await fetch(searchUrl.toString(), {\n\t\t\t\theaders: {\n\t\t\t\t\tAuthorization: `Bearer ${tokenData.accessToken}`,\n\t\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t\tAccept: \"application/json\",\n\t\t\t\t},\n\t\t\t});\n\n\t\t\tif (!searchResponse.ok) {\n\t\t\t\tconst errorText = await searchResponse.text();\n\t\t\t\tconsole.error(\n\t\t\t\t\t`Spotify ISRC search error (${searchResponse.status}):`,\n\t\t\t\t\terrorText,\n\t\t\t\t);\n\t\t\t\treturn NextResponse.json(\n\t\t\t\t\t{\n\t\t\t\t\t\terror: `Spotify API error: ${searchResponse.status}`,\n\t\t\t\t\t\tdetails: errorText,\n\t\t\t\t\t},\n\t\t\t\t\t{ status: searchResponse.status },\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tconst searchData = await searchResponse.json();\n\n\t\t\tif (searchData.tracks && searchData.tracks.items.length > 0) {\n\t\t\t\t// We found a track by ISRC, get its full details using the ID\n\t\t\t\tconst trackId = searchData.tracks.items[0].id;\n\t\t\t\tconsole.log(`Found track by ISRC: ${trackId}`);\n\n\t\t\t\tconst trackUrl = `https://api.spotify.com/v1/tracks/${trackId}?market=US`;\n\t\t\t\tconst trackResponse = await fetch(trackUrl, {\n\t\t\t\t\theaders: {\n\t\t\t\t\t\tAuthorization: `Bearer ${tokenData.accessToken}`,\n\t\t\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t\t},\n\t\t\t\t});\n\n\t\t\t\tif (!trackResponse.ok) {\n\t\t\t\t\tconst errorText = await trackResponse.text();\n\t\t\t\t\tconsole.error(\n\t\t\t\t\t\t`Spotify track details error (${trackResponse.status}):`,\n\t\t\t\t\t\terrorText,\n\t\t\t\t\t);\n\t\t\t\t\treturn NextResponse.json(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\terror: `Spotify API error: ${trackResponse.status}`,\n\t\t\t\t\t\t\tdetails: errorText,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{ status: trackResponse.status },\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tconst trackData: SpotifyTrack = await trackResponse.json();\n\t\t\t\treturn NextResponse.json(trackData);\n\t\t\t}\n\n\t\t\treturn NextResponse.json(\n\t\t\t\t{ error: \"No track found with this ISRC\" },\n\t\t\t\t{ status: 404 },\n\t\t\t);\n\t\t}\n\n\t\t// If ID is provided, get track directly\n\t\tif (id) {\n\t\t\tconsole.log(`Getting track by ID: ${id}`);\n\n\t\t\tconst trackUrl = `https://api.spotify.com/v1/tracks/${id}?market=US`;\n\t\t\tconst trackResponse = await fetch(trackUrl, {\n\t\t\t\theaders: {\n\t\t\t\t\tAuthorization: `Bearer ${tokenData.accessToken}`,\n\t\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t},\n\t\t\t});\n\n\t\t\tif (!trackResponse.ok) {\n\t\t\t\tconst errorText = await trackResponse.text();\n\t\t\t\tconsole.error(\n\t\t\t\t\t`Spotify track details error (${trackResponse.status}):`,\n\t\t\t\t\terrorText,\n\t\t\t\t);\n\t\t\t\treturn NextResponse.json(\n\t\t\t\t\t{\n\t\t\t\t\t\terror: `Spotify API error: ${trackResponse.status}`,\n\t\t\t\t\t\tdetails: errorText,\n\t\t\t\t\t},\n\t\t\t\t\t{ status: trackResponse.status },\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tconst trackData: SpotifyTrack = await trackResponse.json();\n\t\t\treturn NextResponse.json(trackData);\n\t\t}\n\t} catch (error) {\n\t\tconsole.error(\"Spotify track error:\", error);\n\n\t\treturn NextResponse.json(\n\t\t\t{\n\t\t\t\terror: \"Failed to get track from Spotify\",\n\t\t\t\tdetails: error instanceof Error ? error.message : String(error),\n\t\t\t},\n\t\t\t{ status: 500 },\n\t\t);\n\t}\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}