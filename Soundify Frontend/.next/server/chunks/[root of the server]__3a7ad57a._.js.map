{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Soundify/src/app/api/pause/route.ts"],"sourcesContent":["import { NextResponse } from \"next/server\";\r\n\r\n// Reference to the global audio player from the play route\r\ndeclare global {\r\n  var currentAudioPlayer: HTMLAudioElement | null;\r\n  var currentTrackId: string | null;\r\n}\r\n\r\nexport async function POST() {\r\n  try {\r\n    if (!global.currentTrackId) {\r\n      return NextResponse.json(\r\n        { error: \"No active track\" }, \r\n        { status: 400 }\r\n      );\r\n    }\r\n    \r\n    // In a real implementation, the actual pause would happen client-side\r\n    // This is a simulated pause for the server-side implementation\r\n    \r\n    return NextResponse.json({ \r\n      status: \"paused\",\r\n      trackId: global.currentTrackId\r\n    });\r\n  } catch (error) {\r\n    console.error(\"Pause error:\", error);\r\n    return NextResponse.json(\r\n      { error: \"Failed to pause playback\" }, \r\n      { status: 500 }\r\n    );\r\n  }\r\n} "],"names":[],"mappings":";;;AAAA;;AAQO,eAAe;IACpB,IAAI;QACF,IAAI,CAAC,OAAO,cAAc,EAAE;YAC1B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAAkB,GAC3B;gBAAE,QAAQ;YAAI;QAElB;QAEA,sEAAsE;QACtE,+DAA+D;QAE/D,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,QAAQ;YACR,SAAS,OAAO,cAAc;QAChC;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,gBAAgB;QAC9B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAA2B,GACpC;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}