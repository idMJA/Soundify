{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Soundify/src/app/player/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect, useRef } from \"react\";\nimport Image from \"next/image\";\nimport Link from \"next/link\";\nimport styled from \"styled-components\";\n\n// Define a Track interface for type safety\ninterface Track {\n  id: string;\n  title: string;\n  artist: string;\n  thumbnail?: string;\n}\n\n// Styled components for layout\nconst PlayerContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100vh;\n  background-color: #f5f5f5;\n`;\n\nconst Controls = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n  width: 100%;\n  max-width: 400px;\n  margin-top: 20px;\n`;\n\nconst TrackInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 20px;\n`;\n\nconst VolumeControl = styled.input`\n  width: 100px;\n`;\n\nexport default function Player() {\n  const [query, setQuery] = useState(\"\");\n  const [results, setResults] = useState<Track[]>([]);\n  const [currentTrack, setCurrentTrack] = useState<Track | null>(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [volume, setVolume] = useState(75);\n  const [queue, setQueue] = useState<Track[]>([]);\n  const [audioUrl, setAudioUrl] = useState<string | null>(null);\n  const [currentService, setCurrentService] = useState<string>(\"invidious\");\n  const [isSearching, setIsSearching] = useState(false);\n  \n  // Reference to the audio element\n  const audioRef = useRef<HTMLAudioElement | null>(null);\n  \n  useEffect(() => {\n    // Initialize audio element when the component mounts\n    if (typeof window !== 'undefined' && !audioRef.current) {\n      audioRef.current = new Audio();\n      \n      // Set initial volume\n      audioRef.current.volume = volume / 100;\n      \n      // Setup event listeners\n      audioRef.current.addEventListener('ended', handleTrackEnded);\n      audioRef.current.addEventListener('error', handleAudioError);\n    }\n    \n    // Cleanup when component unmounts\n    return () => {\n      if (audioRef.current) {\n        audioRef.current.pause();\n        audioRef.current.removeEventListener('ended', handleTrackEnded);\n        audioRef.current.removeEventListener('error', handleAudioError);\n        audioRef.current = null;\n      }\n    };\n  }, [volume]);\n  \n  // Handle track ended event (auto play next)\n  const handleTrackEnded = () => {\n    skipTrack();\n  };\n  \n  // Handle audio errors\n  const handleAudioError = (e: Event) => {\n    console.error(\"Audio error:\", e);\n    // You could implement retry logic or fallbacks here\n  };\n  \n  // Update audio element when volume changes\n  useEffect(() => {\n    if (audioRef.current) {\n      audioRef.current.volume = volume / 100;\n    }\n  }, [volume]);\n  \n  // Update audio element when audio URL changes\n  useEffect(() => {\n    if (audioRef.current && audioUrl) {\n      audioRef.current.src = audioUrl;\n      \n      if (isPlaying) {\n        const playPromise = audioRef.current.play();\n        if (playPromise !== undefined) {\n          playPromise.catch(error => {\n            console.error(\"Playback error:\", error);\n            // Handle auto-play restrictions here\n          });\n        }\n      }\n    }\n  }, [audioUrl, isPlaying]);\n\n  const handleSearch = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (!query.trim()) return;\n\n    setIsSearching(true);\n    \n    try {\n      const response = await fetch(`/api/search?query=${encodeURIComponent(query)}`);\n      const data = await response.json();\n      setResults(data.tracks || []);\n      \n      // Set the service that was used\n      if (data.service) {\n        setCurrentService(data.service);\n      }\n    } catch (error) {\n      console.error(\"Search error:\", error);\n    } finally {\n      setIsSearching(false);\n    }\n  };\n\n  const playTrack = async (track: Track) => {\n    try {\n      const response = await fetch('/api/play', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ track }),\n      });\n      \n      if (response.ok) {\n        const data = await response.json();\n        \n        // Set current track and update player state\n        setCurrentTrack(track);\n        setIsPlaying(true);\n        \n        // Store the audio URL for the client-side player\n        setAudioUrl(data.audioUrl);\n        \n        // Update the service that was used\n        if (data.service) {\n          setCurrentService(data.service);\n        }\n        \n        // Add to queue if not already playing\n        if (!currentTrack) {\n          setQueue([...queue, track]);\n        }\n      }\n    } catch (error) {\n      console.error(\"Play error:\", error);\n    }\n  };\n\n  const togglePlayPause = async () => {\n    if (!currentTrack || !audioRef.current) return;\n    \n    try {\n      const endpoint = isPlaying ? '/api/pause' : '/api/resume';\n      await fetch(endpoint, { method: 'POST' });\n      \n      // Update client-side playback\n      if (isPlaying) {\n        audioRef.current.pause();\n      } else {\n        await audioRef.current.play();\n      }\n      \n      setIsPlaying(!isPlaying);\n    } catch (error) {\n      console.error(\"Toggle play/pause error:\", error);\n    }\n  };\n\n  const skipTrack = async () => {\n    if (queue.length <= 1) return;\n    \n    try {\n      const response = await fetch('/api/skip', { method: 'POST' });\n      \n      if (response.ok) {\n        const data = await response.json();\n        \n        if (data.endOfQueue) {\n          // End of queue reached, stop playback\n          setCurrentTrack(null);\n          setIsPlaying(false);\n          setAudioUrl(null);\n          if (audioRef.current) {\n            audioRef.current.pause();\n          }\n        } else if (data.nextTrack) {\n          // Play next track\n          const nextTrack = data.nextTrack;\n          setCurrentTrack(nextTrack);\n          \n          // We need to fetch the audio URL for the next track\n          const playResponse = await fetch('/api/play', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ track: nextTrack }),\n          });\n          \n          if (playResponse.ok) {\n            const playData = await playResponse.json();\n            setAudioUrl(playData.audioUrl);\n          }\n        }\n        \n        // Remove current track from queue and set next track as current\n        const newQueue = [...queue];\n        newQueue.shift();\n        setQueue(newQueue);\n      }\n    } catch (error) {\n      console.error(\"Skip error:\", error);\n    }\n  };\n\n  const handleVolumeChange = async (e: React.ChangeEvent<HTMLInputElement>) => {\n    const newVolume = Number.parseInt(e.target.value);\n    setVolume(newVolume);\n    \n    try {\n      await fetch('/api/volume', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ volume: newVolume }),\n      });\n    } catch (error) {\n      console.error(\"Volume change error:\", error);\n    }\n  };\n\n  const handlePlayPause = () => {\n    if (audioRef.current) {\n      if (isPlaying) {\n        audioRef.current.pause();\n      } else {\n        audioRef.current.play();\n      }\n      setIsPlaying(!isPlaying);\n    }\n  };\n\n  return (\n    <PlayerContainer>\n      <h1>Soundify Player</h1>\n      <TrackInfo>\n        {currentTrack && (\n          <>\n            <Image src={currentTrack.thumbnail || ''} alt=\"Track Thumbnail\" width={150} height={150} />\n            <h2>{currentTrack.title}</h2>\n            <h3>{currentTrack.artist}</h3>\n          </>\n        )}\n      </TrackInfo>\n      <Controls>\n        <button onClick={handlePlayPause}>{isPlaying ? \"Pause\" : \"Play\"}</button>\n        <VolumeControl\n          type=\"range\"\n          min=\"0\"\n          max=\"100\"\n          value={volume}\n          onChange={(e) => setVolume(Number(e.target.value))}\n        />\n      </Controls>\n    </PlayerContainer>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}