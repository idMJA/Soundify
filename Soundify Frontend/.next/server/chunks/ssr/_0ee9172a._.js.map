{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 24, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Soundify/src/app/player/page.tsx"],"sourcesContent":["import { useState, useEffect, useRef } from \"react\";\nimport Image from \"next/image\";\nimport Link from \"next/link\";\n\n// Define interfaces for type safety\ninterface Track {\n  id: string;\n  title: string;\n  artist: string;\n  thumbnail?: string;\n  duration?: number;\n  views?: number;\n  uploadedDate?: string;\n}\n\ninterface TrendingVideo {\n  duration: number;\n  thumbnail: string;\n  title: string;\n  uploadedDate: string;\n  uploaderAvatar: string;\n  uploaderUrl: string;\n  uploaderVerified: boolean;\n  url: string;\n  views: number;\n}\n\nexport default function Player() {\n  const [query, setQuery] = useState(\"\");\n  const [results, setResults] = useState<Track[]>([]);\n  const [currentTrack, setCurrentTrack] = useState<Track | null>(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [volume, setVolume] = useState(75);\n  const [queue, setQueue] = useState<Track[]>([]);\n  const [audioUrl, setAudioUrl] = useState<string | null>(null);\n  const [currentService, setCurrentService] = useState<string>(\"invidious\");\n  const [isSearching, setIsSearching] = useState(false);\n  const [trendingVideos, setTrendingVideos] = useState<Track[]>([]);\n  \n  // Reference to the audio element\n  const audioRef = useRef<HTMLAudioElement | null>(null);\n  \n  useEffect(() => {\n    // Initialize audio element and fetch trending videos when component mounts\n    if (typeof window !== 'undefined' && !audioRef.current) {\n      audioRef.current = new Audio();\n      audioRef.current.volume = volume / 100;\n      audioRef.current.addEventListener('ended', handleTrackEnded);\n      audioRef.current.addEventListener('error', handleAudioError);\n      \n      // Fetch trending videos\n      fetchTrendingVideos();\n    }\n    \n    return () => {\n      if (audioRef.current) {\n        audioRef.current.pause();\n        audioRef.current.removeEventListener('ended', handleTrackEnded);\n        audioRef.current.removeEventListener('error', handleAudioError);\n        audioRef.current = null;\n      }\n    };\n  }, [volume]);\n\n  const fetchTrendingVideos = async () => {\n    try {\n      const response = await fetch('/api/invidious/trending?region=US');\n      const data: TrendingVideo[] = await response.json();\n      \n      const formattedTrending: Track[] = data.map(video => ({\n        id: video.url.split('v=')[1],\n        title: video.title,\n        artist: video.uploaderUrl.split('/channel/')[1],\n        thumbnail: video.thumbnail,\n        duration: video.duration,\n        views: video.views,\n        uploadedDate: video.uploadedDate\n      }));\n      \n      setTrendingVideos(formattedTrending);\n    } catch (error) {\n      console.error('Error fetching trending videos:', error);\n    }\n  };\n\n  const handleTrackEnded = () => {\n    // Play next track in queue\n    if (queue.length > 0) {\n      const nextTrack = queue[0];\n      const newQueue = queue.slice(1);\n      setQueue(newQueue);\n      playTrack(nextTrack);\n    } else {\n      setIsPlaying(false);\n      setCurrentTrack(null);\n    }\n  };\n\n  const handleAudioError = (error: Event) => {\n    console.error('Audio playback error:', error);\n    handleTrackEnded(); // Skip to next track on error\n  };\n\n  const playTrack = async (track: Track) => {\n    try {\n      setIsPlaying(true);\n      setCurrentTrack(track);\n      \n      // Get audio URL from your API\n      const response = await fetch(`/api/lavalink/play?id=${track.id}`);\n      const data = await response.json();\n      \n      if (data.url) {\n        setAudioUrl(data.url);\n        if (audioRef.current) {\n          audioRef.current.src = data.url;\n          audioRef.current.play();\n        }\n      }\n    } catch (error) {\n      console.error('Error playing track:', error);\n    }\n  };\n\n  const handleSearch = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (!query.trim()) return;\n\n    setIsSearching(true);\n    \n    try {\n      const response = await fetch(`/api/search?query=${encodeURIComponent(query)}`);\n      const data = await response.json();\n      setResults(data.tracks || []);\n      \n      // Set the service that was used\n      if (data.service) {\n        setCurrentService(data.service);\n      }\n    } catch (error) {\n      console.error(\"Search error:\", error);\n    } finally {\n      setIsSearching(false);\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col h-screen bg-background text-foreground\">\n      {/* Header */}\n      <header className=\"flex items-center justify-between p-4 border-b border-border\">\n        <div className=\"flex items-center gap-4\">\n          <form onSubmit={handleSearch}>\n            <input\n              type=\"text\"\n              placeholder=\"What do you want to play?\"\n              className=\"w-96 px-4 py-2 rounded-full bg-input text-foreground\"\n              value={query}\n              onChange={(e) => setQuery(e.target.value)}\n            />\n          </form>\n        </div>\n        <div className=\"flex items-center gap-4\">\n          <button \n            type=\"button\"\n            className=\"px-4 py-1 rounded-full bg-primary text-primary-foreground\"\n          >\n            Explore Premium\n          </button>\n          <button \n            type=\"button\"\n            className=\"px-4 py-1 rounded-full border border-border\"\n          >\n            Install App\n          </button>\n        </div>\n      </header>\n\n      {/* Main Content */}\n      <main className=\"flex-1 overflow-auto p-6\">\n        <section className=\"mb-8\">\n          <h2 className=\"text-2xl font-bold mb-4\">Trending</h2>\n          <div className=\"grid grid-cols-4 gap-4\">\n            {trendingVideos.slice(0, 8).map((video) => (\n              <button\n                key={video.id}\n                type=\"button\"\n                className=\"p-4 rounded-lg bg-card hover:bg-accent cursor-pointer w-full text-left\"\n                onClick={() => playTrack(video)}\n              >\n                <div className=\"relative aspect-video mb-2\">\n                  <Image\n                    src={video.thumbnail || ''}\n                    alt={video.title}\n                    fill\n                    className=\"rounded-md object-cover\"\n                  />\n                </div>\n                <h3 className=\"font-semibold truncate\">{video.title}</h3>\n                <p className=\"text-sm text-muted-foreground\">\n                  {video.views?.toLocaleString()} views • {video.uploadedDate}\n                </p>\n              </button>\n            ))}\n          </div>\n        </section>\n\n        {/* For You Section */}\n        <section>\n          <h2 className=\"text-2xl font-bold mb-4\">Made for you</h2>\n          <div className=\"grid grid-cols-6 gap-4\">\n            {results.map((track) => (\n              <button\n                key={track.id}\n                type=\"button\"\n                className=\"p-4 rounded-lg bg-card hover:bg-accent cursor-pointer w-full text-left\"\n                onClick={() => playTrack(track)}\n              >\n                <div className=\"relative aspect-square mb-2\">\n                  <Image\n                    src={track.thumbnail || ''}\n                    alt={track.title}\n                    fill\n                    className=\"rounded-md object-cover\"\n                  />\n                </div>\n                <h3 className=\"font-semibold truncate\">{track.title}</h3>\n                <p className=\"text-sm text-muted-foreground truncate\">\n                  {track.artist}\n                </p>\n              </button>\n            ))}\n          </div>\n        </section>\n      </main>\n\n      {/* Player Controls */}\n      <footer className=\"border-t border-border p-4\">\n        <div className=\"flex items-center justify-between\">\n          {/* Current Track Info */}\n          <div className=\"flex items-center gap-4\">\n            {currentTrack && (\n              <>\n                <div className=\"relative w-14 h-14\">\n                  <Image\n                    src={currentTrack.thumbnail || ''}\n                    alt={currentTrack.title}\n                    fill\n                    className=\"rounded-md object-cover\"\n                  />\n                </div>\n                <div>\n                  <h4 className=\"font-semibold\">{currentTrack.title}</h4>\n                  <p className=\"text-sm text-muted-foreground\">\n                    {currentTrack.artist}\n                  </p>\n                </div>\n              </>\n            )}\n          </div>\n\n          {/* Playback Controls */}\n          <div className=\"flex items-center gap-4\">\n            <button\n              type=\"button\"\n              onClick={() => setIsPlaying(!isPlaying)}\n              className=\"w-10 h-10 rounded-full bg-primary text-primary-foreground flex items-center justify-center\"\n            >\n              {isPlaying ? '⏸' : '▶'}\n            </button>\n          </div>\n\n          {/* Volume Control */}\n          <div className=\"flex items-center gap-2\">\n            <input\n              type=\"range\"\n              min=\"0\"\n              max=\"100\"\n              value={volume}\n              onChange={(e) => setVolume(Number(e.target.value))}\n              className=\"w-24\"\n            />\n          </div>\n        </div>\n      </footer>\n    </div>\n  );\n}"],"names":[],"mappings":";;;;AAAA;AACA;;;;AA0Be,SAAS;IACtB,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAW,EAAE;IAClD,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAgB;IAC/D,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACrC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAW,EAAE;IAC9C,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IACxD,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IAC7D,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAW,EAAE;IAEhE,iCAAiC;IACjC,MAAM,WAAW,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAA2B;IAEjD,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,2EAA2E;QAC3E,uCAAwD;;QAQxD;QAEA,OAAO;YACL,IAAI,SAAS,OAAO,EAAE;gBACpB,SAAS,OAAO,CAAC,KAAK;gBACtB,SAAS,OAAO,CAAC,mBAAmB,CAAC,SAAS;gBAC9C,SAAS,OAAO,CAAC,mBAAmB,CAAC,SAAS;gBAC9C,SAAS,OAAO,GAAG;YACrB;QACF;IACF,GAAG;QAAC;KAAO;IAEX,MAAM,sBAAsB;QAC1B,IAAI;YACF,MAAM,WAAW,MAAM,MAAM;YAC7B,MAAM,OAAwB,MAAM,SAAS,IAAI;YAEjD,MAAM,oBAA6B,KAAK,GAAG,CAAC,CAAA,QAAS,CAAC;oBACpD,IAAI,MAAM,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;oBAC5B,OAAO,MAAM,KAAK;oBAClB,QAAQ,MAAM,WAAW,CAAC,KAAK,CAAC,YAAY,CAAC,EAAE;oBAC/C,WAAW,MAAM,SAAS;oBAC1B,UAAU,MAAM,QAAQ;oBACxB,OAAO,MAAM,KAAK;oBAClB,cAAc,MAAM,YAAY;gBAClC,CAAC;YAED,kBAAkB;QACpB,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,mCAAmC;QACnD;IACF;IAEA,MAAM,mBAAmB;QACvB,2BAA2B;QAC3B,IAAI,MAAM,MAAM,GAAG,GAAG;YACpB,MAAM,YAAY,KAAK,CAAC,EAAE;YAC1B,MAAM,WAAW,MAAM,KAAK,CAAC;YAC7B,SAAS;YACT,UAAU;QACZ,OAAO;YACL,aAAa;YACb,gBAAgB;QAClB;IACF;IAEA,MAAM,mBAAmB,CAAC;QACxB,QAAQ,KAAK,CAAC,yBAAyB;QACvC,oBAAoB,8BAA8B;IACpD;IAEA,MAAM,YAAY,OAAO;QACvB,IAAI;YACF,aAAa;YACb,gBAAgB;YAEhB,8BAA8B;YAC9B,MAAM,WAAW,MAAM,MAAM,CAAC,sBAAsB,EAAE,MAAM,EAAE,EAAE;YAChE,MAAM,OAAO,MAAM,SAAS,IAAI;YAEhC,IAAI,KAAK,GAAG,EAAE;gBACZ,YAAY,KAAK,GAAG;gBACpB,IAAI,SAAS,OAAO,EAAE;oBACpB,SAAS,OAAO,CAAC,GAAG,GAAG,KAAK,GAAG;oBAC/B,SAAS,OAAO,CAAC,IAAI;gBACvB;YACF;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,wBAAwB;QACxC;IACF;IAEA,MAAM,eAAe,OAAO;QAC1B,EAAE,cAAc;QAChB,IAAI,CAAC,MAAM,IAAI,IAAI;QAEnB,eAAe;QAEf,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,CAAC,kBAAkB,EAAE,mBAAmB,QAAQ;YAC7E,MAAM,OAAO,MAAM,SAAS,IAAI;YAChC,WAAW,KAAK,MAAM,IAAI,EAAE;YAE5B,gCAAgC;YAChC,IAAI,KAAK,OAAO,EAAE;gBAChB,kBAAkB,KAAK,OAAO;YAChC;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,iBAAiB;QACjC,SAAU;YACR,eAAe;QACjB;IACF;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BAEb,8OAAC;gBAAO,WAAU;;kCAChB,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAK,UAAU;sCACd,cAAA,8OAAC;gCACC,MAAK;gCACL,aAAY;gCACZ,WAAU;gCACV,OAAO;gCACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;;;;;;;;;;;;;;;;kCAI9C,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCACC,MAAK;gCACL,WAAU;0CACX;;;;;;0CAGD,8OAAC;gCACC,MAAK;gCACL,WAAU;0CACX;;;;;;;;;;;;;;;;;;0BAOL,8OAAC;gBAAK,WAAU;;kCACd,8OAAC;wBAAQ,WAAU;;0CACjB,8OAAC;gCAAG,WAAU;0CAA0B;;;;;;0CACxC,8OAAC;gCAAI,WAAU;0CACZ,eAAe,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,sBAC/B,8OAAC;wCAEC,MAAK;wCACL,WAAU;wCACV,SAAS,IAAM,UAAU;;0DAEzB,8OAAC;gDAAI,WAAU;0DACb,cAAA,8OAAC,6HAAA,CAAA,UAAK;oDACJ,KAAK,MAAM,SAAS,IAAI;oDACxB,KAAK,MAAM,KAAK;oDAChB,IAAI;oDACJ,WAAU;;;;;;;;;;;0DAGd,8OAAC;gDAAG,WAAU;0DAA0B,MAAM,KAAK;;;;;;0DACnD,8OAAC;gDAAE,WAAU;;oDACV,MAAM,KAAK,EAAE;oDAAiB;oDAAU,MAAM,YAAY;;;;;;;;uCAfxD,MAAM,EAAE;;;;;;;;;;;;;;;;kCAuBrB,8OAAC;;0CACC,8OAAC;gCAAG,WAAU;0CAA0B;;;;;;0CACxC,8OAAC;gCAAI,WAAU;0CACZ,QAAQ,GAAG,CAAC,CAAC,sBACZ,8OAAC;wCAEC,MAAK;wCACL,WAAU;wCACV,SAAS,IAAM,UAAU;;0DAEzB,8OAAC;gDAAI,WAAU;0DACb,cAAA,8OAAC,6HAAA,CAAA,UAAK;oDACJ,KAAK,MAAM,SAAS,IAAI;oDACxB,KAAK,MAAM,KAAK;oDAChB,IAAI;oDACJ,WAAU;;;;;;;;;;;0DAGd,8OAAC;gDAAG,WAAU;0DAA0B,MAAM,KAAK;;;;;;0DACnD,8OAAC;gDAAE,WAAU;0DACV,MAAM,MAAM;;;;;;;uCAfV,MAAM,EAAE;;;;;;;;;;;;;;;;;;;;;;0BAwBvB,8OAAC;gBAAO,WAAU;0BAChB,cAAA,8OAAC;oBAAI,WAAU;;sCAEb,8OAAC;4BAAI,WAAU;sCACZ,8BACC;;kDACE,8OAAC;wCAAI,WAAU;kDACb,cAAA,8OAAC,6HAAA,CAAA,UAAK;4CACJ,KAAK,aAAa,SAAS,IAAI;4CAC/B,KAAK,aAAa,KAAK;4CACvB,IAAI;4CACJ,WAAU;;;;;;;;;;;kDAGd,8OAAC;;0DACC,8OAAC;gDAAG,WAAU;0DAAiB,aAAa,KAAK;;;;;;0DACjD,8OAAC;gDAAE,WAAU;0DACV,aAAa,MAAM;;;;;;;;;;;;;;;;;;;sCAQ9B,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC;gCACC,MAAK;gCACL,SAAS,IAAM,aAAa,CAAC;gCAC7B,WAAU;0CAET,YAAY,MAAM;;;;;;;;;;;sCAKvB,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC;gCACC,MAAK;gCACL,KAAI;gCACJ,KAAI;gCACJ,OAAO;gCACP,UAAU,CAAC,IAAM,UAAU,OAAO,EAAE,MAAM,CAAC,KAAK;gCAChD,WAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOxB","debugId":null}}]
}